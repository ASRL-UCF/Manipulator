CREATING A BETTER MOVE

GOAL: TRAJECTORY TRACKING 

	read about vector value function again
	given a z value timestamps, reach those points using a function/trajectory tracking.
	
	start point is already on function that it wants to track.
	
	HOW TO MODIFY:
	callback funciton?
	input of the function what gets inputted in the script and what gets called to calc kinematics
	
	
IMPLEMENTATION?

	for linear updown, must give height brackets & period time: 
		once you start the program, depending on were its at, all other factors are fixed: x,y pos & yaw,pitch,roll fixed.
	
		calculation based on [lower]*cos(wt)+[upper-lower]
		calculation for period = 2pi/[new period] = w
		
		ex
		upper = 600
		lower = 200
		new period = 8pi
		
		going from the top at 600mm to 200 mm at a period of 8pi
		200cos(1/4*x)+400	
	
		based on this period speed, calcs for the motor speeds and kinematics must be given.
		
		calc motor speed?
		
		how does inv kinematics calc and move to a position?
		
		also zjogneg/pos - this is the one you probably want to do/ use - also look at the ar2 2.0 files to see how he moves linearly
		
NOTES:

	runProg() runs the program like you press the play button
	stopProg() stops the program like you press the stop button
	
	executeRow() runs the line in the loaded program
	MoveXYZ(CX,CY,CZ,CRx,CRy,CRz,newSpeed,ACCdur,ACCspd,DECdur,DECspd,WC,TCX,TCY,TCZ,TCRx,TCRy,TCRz,Track) calls
		 CalcRevKin
		 MoveNew
		 
	CalXYZ(CX,CY,CZ,CRx,CRy,CRz,newSpeed,ACCdur,ACCspd,DECdur,DECspd,WC,TCX,TCY,TCZ,TCRx,TCRy,TCRz,Track) calls
		CalcRevKin(CX,CY,CZ,CRx,CRy,CRz,WC,TCX,TCY,TCZ,TCRx,TCRy,TCRz)
		CalNew(J1out,J2out,J3out,J4out,J5out,J6out,newSpeed,ACCdur,ACCspd,DECdur,DECspd,Track)  
		
	J#jogpos/neg shows how the motors get jogged and how the program saves the data/what is accessed and calculated.
	
	ACCspeedField.get() - example of getting values from field
	
	
	
	2.0 stuff
	
		look at if (cmdType == "Move L"):
			CalcLinDist ? - what does this do/ how does it work with CalcLinVect
			
			XcurPos
			YcurPos
			ZcurPos
			RxcurPos
			etc.
			
			this is how you get the current positions for the arm/variables stored